{"mappings":"ACEA,IAwBQ,EAxBF,EAAO,SAAS,aAAa,CAAC,MAC9B,EAAQ,SAAS,gBAAgB,CAAC,MAExC,SAAS,EAAa,CAAM,EAI1B,OAAO,WAFW,WADH,EAAO,KAAK,CAAC,IAI9B,CAEA,SAAS,EAAS,CAAG,EACnB,IAAM,EAAoB,MAAM,IAAI,CAAC,GASrC,OAPA,EAAkB,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3B,EACE,IAAM,EAAS,EAAa,EAAE,OAAO,CAAC,MAAM,EAG5C,OAAO,AAFQ,EAAa,EAAE,OAAO,CAAC,MAAM,EAE5B,CAClB,GAEO,CACT,CAiBA,IAAM,EAAU,EAAS,EAEzB,CAAA,EAAK,SAAS,CAAI,iBAUF,MAAA,CARV,EAAQ,GAAG,CAAC,SAAA,CAFlB,EAE0B,MAAC,sCAGL,MAAA,CADE,EAAK,OAAO,CAAC,QAAQ,CAAC,0BAE3B,MAAA,CADG,EAAK,OAAO,CAAC,MAAM,CAAC,uBAGhC,MAAA,CAFS,EAAK,OAAO,CAAC,GAAG,CAAC,uBAEX,MAAA,CAAf,EAAK,SAAS,CAAC,sBAElB,GAAA,IAAI,CAAC,IAAI,eA1BR,EAAY,EAAE,CAEpB,AA4BW,EA5BP,OAAO,CAAC,SAAA,CAAZ,EACE,EAAU,IAAI,CAAC,CACb,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,EACF,GAsBF,EAAS,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar list = document.querySelector(\"ul\");\nvar items = document.querySelectorAll(\"li\");\nfunction convertToNum(string) {\n    var sliced = string.slice(1);\n    var converted = parseFloat(sliced);\n    return parseFloat(converted);\n}\nfunction sortList(arr) {\n    var arrayFromNodeList = Array.from(arr);\n    arrayFromNodeList.sort(function(a, b) {\n        var valueA = convertToNum(a.dataset.salary);\n        var valueB = convertToNum(b.dataset.salary);\n        return valueB - valueA;\n    });\n    return arrayFromNodeList;\n}\nfunction getEmployees(arr) {\n    var employees = [];\n    arr.forEach(function(item) {\n        employees.push({\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        });\n    });\n    return employees;\n}\nvar newList = sortList(items);\nlist.innerHTML = \"\\n  <ul>\\n    \".concat(newList.map(function(item) {\n    return \"\\n      <li\\n        data-position=\".concat(item.dataset.position, \"\\n        data-salary=\").concat(item.dataset.salary, \"\\n        data-age=\").concat(item.dataset.age, \"\\n      >\\n        \").concat(item.innerText, \"\\n      </li>\\n    \");\n}).join(\"\"), \"\\n  </ul>\\n\");\ngetEmployees(items);\nsortList(items);\n\n//# sourceMappingURL=index.90fafdf8.js.map\n","'use strict';\n\nconst list = document.querySelector('ul');\nconst items = document.querySelectorAll('li');\n\nfunction convertToNum(string) {\n  const sliced = string.slice(1);\n  const converted = parseFloat(sliced);\n\n  return parseFloat(converted);\n}\n\nfunction sortList(arr) {\n  const arrayFromNodeList = Array.from(arr);\n\n  arrayFromNodeList.sort((a, b) => {\n    const valueA = convertToNum(a.dataset.salary);\n    const valueB = convertToNum(b.dataset.salary);\n\n    return valueB - valueA;\n  });\n\n  return arrayFromNodeList;\n}\n\nfunction getEmployees(arr) {\n  const employees = [];\n\n  arr.forEach(item => {\n    employees.push({\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    });\n  });\n\n  return employees;\n}\n\nconst newList = sortList(items);\n\nlist.innerHTML = `\n  <ul>\n    ${newList.map(item => `\n      <li\n        data-position=${item.dataset.position}\n        data-salary=${item.dataset.salary}\n        data-age=${item.dataset.age}\n      >\n        ${item.innerText}\n      </li>\n    `).join('')}\n  </ul>\n`;\n\ngetEmployees(items);\nsortList(items);\n"],"names":["employees","list","document","querySelector","items","querySelectorAll","convertToNum","string","parseFloat","slice","sortList","arr","arrayFromNodeList","Array","from","sort","a","b","valueA","dataset","salary","valueB","newList","innerHTML","concat","map","item","position","age","innerText","join","forEach","push","name","textContent","trim"],"version":3,"file":"index.90fafdf8.js.map"}